I"U?<h1 id="-스킬트리">📌 스킬트리</h1>

<blockquote>
  <p>난이도 ⭐⭐</p>
</blockquote>

<h2 id="-문제">🚀 문제</h2>

<p><img src="https://user-images.githubusercontent.com/42318591/105807010-7383c900-5fe8-11eb-8f5d-2d58d4276b40.png" alt="image" /></p>

<p><br /></p>

<h2 id="-내-풀이-">🚀 내 풀이 ⭕</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">skill</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">skill_trees</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">skill_trees</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">pos</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
        <span class="kt">bool</span> <span class="n">impossible</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="kt">char</span> <span class="n">impossibleChar</span> <span class="o">=</span> <span class="n">skill</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">skill</span><span class="p">.</span><span class="n">length</span><span class="p">();</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">j</span> <span class="o">!=</span> <span class="n">skill</span><span class="p">.</span><span class="n">length</span><span class="p">())</span>
                <span class="n">impossibleChar</span> <span class="o">=</span> <span class="n">skill</span><span class="p">[</span><span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="p">];</span>

            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="n">pos</span><span class="p">;</span> <span class="n">k</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">skill</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">skill_trees</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">k</span><span class="p">])</span>
                <span class="p">{</span>
                    <span class="n">impossible</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>

            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="n">pos</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="n">skill_trees</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">length</span><span class="p">();</span> <span class="n">k</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">skill</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">skill_trees</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">k</span><span class="p">])</span>
                <span class="p">{</span>
                    <span class="n">pos</span> <span class="o">=</span> <span class="n">k</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">impossibleChar</span> <span class="o">==</span> <span class="n">skill_trees</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">k</span><span class="p">])</span>
                <span class="p">{</span>
                    <span class="n">impossible</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">impossible</span><span class="p">)</span>
            <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>예를 들어 <code class="language-plaintext highlighter-rouge">skill</code>이 “CBD”이며 가능한 스킬 트리인지 검사하려는 대상이 “BACDE”라면
    <ul>
      <li>“C”
        <ul>
          <li>C가 3번째에 있다. ⭕ C의 위치를 저장한다.</li>
        </ul>
      </li>
      <li>“B”
        <ul>
          <li>C의 ‘앞’에 B가 있다. ⭕
            <ul>
              <li>👉 불가능한 스킬트리</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>예를 들어 <code class="language-plaintext highlighter-rouge">skill</code>이 “CBD”이며 가능한 스킬 트리인지 검사하려는 대상이 “BDF”라면
    <ul>
      <li>“C”
        <ul>
          <li>C가 없다. ❌ <u>따라서 impossibleChar 에 다음 글자인 "B"를 저장한다. 다음에 "B" 검사할 때 B가 C 앞에 오면 안되는 것을 기억해야 하기 때문</u></li>
        </ul>
      </li>
      <li>“B”
        <ul>
          <li>C의 ‘앞’에 B가 있다. ⭕
            <ul>
              <li>👉 불가능한 스킬트리</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>예를 들어 <code class="language-plaintext highlighter-rouge">skill</code>이 “CBD”이며 가능한 스킬 트리인지 검사하려는 대상이 “ACDE”라면
    <ul>
      <li>“C”
        <ul>
          <li>C가 2번째에 있다. ⭕ C의 위치를 저장한다.</li>
        </ul>
      </li>
      <li>“B”
        <ul>
          <li>C의 ‘뒤’에 B가 없다. ❌ (없어도 됨. 스킬트리에 꼭 CBD가 다 들어가야하는건 아니다. 강화 가능 순서만 지키면 될 뿐.) B의 위치를 저장한다.</li>
        </ul>
      </li>
      <li>“D”
        <ul>
          <li>B의 ‘뒤’에 D가 있다. ⭕ D의 위치를 저장한다.</li>
        </ul>
      </li>
      <li>반복문 전체 도는 동안 한번도 <code class="language-plaintext highlighter-rouge">break</code> 되지 않았으므로 이 스킬은 가능한 스킬트리이다.</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h2 id="-다른-풀이">🚀 다른 풀이</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;map&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">skill</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">skill_trees</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">map</span><span class="o">&lt;</span><span class="kt">char</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">numberOf</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">skill</span><span class="p">.</span><span class="n">length</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="n">numberOf</span><span class="p">[</span><span class="n">skill</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">skill_trees</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">current</span> <span class="o">=</span> <span class="n">numberOf</span><span class="p">[</span><span class="n">skill</span><span class="p">[</span><span class="mi">0</span><span class="p">]];</span> <span class="c1">// 첫 글자의 가치부터 차례 차례 </span>
        <span class="kt">bool</span> <span class="n">possible</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>

        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">skill_trees</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span><span class="p">();</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">current</span> <span class="o">&lt;</span> <span class="n">numberOf</span><span class="p">[</span><span class="n">skill_trees</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]])</span>
            <span class="p">{</span>
                <span class="n">possible</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">current</span> <span class="o">==</span> <span class="n">numberOf</span><span class="p">[</span><span class="n">skill_trees</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]])</span>
                <span class="n">current</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">possible</span><span class="p">)</span> <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<blockquote>
  <p>코드는 <a href="https://mungto.tistory.com/7">멍토님 블로그</a> 를 참고하였다.</p>
</blockquote>

<p><u>map 의 Key, Value</u></p>

<ul>
  <li>예를 들어 <code class="language-plaintext highlighter-rouge">skill</code>이 “ACBED”이라면
    <ul>
      <li><strong>맵을 통하여 비교 기준이 되는 가치를 부여</strong> “C”는 1, “B”는 2, “D”는 3.
        <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map</span><span class="o">&lt;</span><span class="kt">char</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">numberOf</span><span class="p">;</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">skill</span><span class="p">.</span><span class="n">length</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="n">numberOf</span><span class="p">[</span><span class="n">skill</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</code></pre></div>        </div>
      </li>
      <li>가치가 더 작은게 반드시 가치가 큰것 보다 앞에 위치해야 한다!</li>
      <li><code class="language-plaintext highlighter-rouge">current</code>에는 차례대로 “C”, “B”, “D” 의 가치인 1, 2, 3 으로 차례로 갱신된다.</li>
      <li>“A”와 “E”같이 map 에 없는 문자들은 알아서 <code class="language-plaintext highlighter-rouge">numberOf[skill_trees[i][j]]</code>만 실행해도 Value 값이 0 인 Key 로서 추가가 된다. map 의 특징!
        <ul>
          <li>정해진 스킬 순서에 없는 “A”와 “E”는 정해진 스킬 순서에 속한 문자들보다 가치가 작아 이들보다 앞에 오더라도 문제가 없게 해야한다. 다행히 map에 추가하면 알아서 int 디폴트 값인 0으로 Value가 설정 됨.</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET