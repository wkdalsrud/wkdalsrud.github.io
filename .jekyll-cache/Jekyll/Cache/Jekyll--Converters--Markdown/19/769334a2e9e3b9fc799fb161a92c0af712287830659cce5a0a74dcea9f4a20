I"*<h2 id="git-저장소-만들기">Git 저장소 만들기</h2>
<ol>
  <li>기존 프로젝트나 디렉터리를 Git 저장소로 만드는 방법</li>
  <li>다른 서버에 있는 저장소를 Clone 하는 방법</li>
</ol>

<h3 id="기존-디렉터리를-git-저장소로-만들기">기존 디렉터리를 Git 저장소로 만들기</h3>
<p>기존 프로젝트를 Git으로 관리하고 싶을 때 프로젝트의 디렉터리로 이동해서 <code class="language-plaintext highlighter-rouge">git init</code> 명령을 실행한다.<br />
이 명령은 .git 이라는 하위 디렉터리를 만든다.<br />
.git 디렉터리에는 저장소에 필요한 뼈대 파일이 들어 있고, 이 명령만으로는 아직 프로젝트의 어떤 파일도 관리하지 않는다.<br />
Git이 파일을 관리하게 하려면 저장소에 파일을 추가하고 커밋해야 한다.</p>
<ul>
  <li>git add *,c</li>
  <li>git add LICENSE</li>
  <li>git commit -m ‘initial project version’</li>
</ul>

<h3 id="기존-저장소를-clone-하기">기존 저장소를 Clone 하기</h3>
<p>다른 프로젝트에 참여하려거나 Git 저장소를 복사하고 싶을 대 <code class="language-plaintext highlighter-rouge">git clone</code> 명령어를 사용한다.<br />
git clone을 실행하면 프로젝트 히스토리를 전부 받아온다.<br />
git clone [url] 명령으로 저장소를 Clone 한다.</p>
<ul>
  <li>git clone https://wkdalsrud.github.io</li>
</ul>

<p>저장소의 데이터를 모두 가져와서 자동으로 가장 최신 버전을 Checkout 해 놓는다.</p>

<h2 id="수정하고-저장소에-저장하기">수정하고 저장소에 저장하기</h2>

<h3 id="working-directory">Working Directory</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Tracked</code>
    <ul>
      <li>관리대상임</li>
      <li>이미 스냅샷에 포함돼 있던 파일이다.</li>
      <li><code class="language-plaintext highlighter-rouge">Unmodified</code>
        <ul>
          <li>수정하지 않음</li>
        </ul>
      </li>
      <li><code class="language-plaintext highlighter-rouge">Modified</code>
        <ul>
          <li>수정함</li>
        </ul>
      </li>
      <li><code class="language-plaintext highlighter-rouge">Staged</code>
        <ul>
          <li>커밋으로 저장소에 기록할</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Untracked</code>
    <ul>
      <li>관리대상이 아님</li>
      <li>Unmodified, Modified, Staged 제외한 모든 파일은 Untracked 파일이다.</li>
      <li>Untracked 파일은 워킹 디렉터리에 있는 파일 중 스냅샷에도 Stageing Area에도 포함되지 않은 파일이다.</li>
    </ul>
  </li>
</ul>

<p>처음 저장소를 Clone하면 파일을 Checkout하고 나서 아무것도 수정하지 않았기 때문에 모든 파일은 Tracked이면서 Unmodified 상태이다. (관리대상이면서 수정하지 않은 상태)</p>

<p>마지막 커밋 이후 아직 아무것도 수정하지 않은 상태에서 어떤 파일을 수정하면 Git은 그 파일을 Modified 상태로 인식한다.<br />
실제로 커밋하기 위해서는 이 수정한 파일을 Staged 상태로 만들고 Staged 상태의 파일을 커밋한다.</p>

<h3 id="파일의-상태-확인하기">파일의 상태 확인하기</h3>
<p><code class="language-plaintext highlighter-rouge">git status</code><br />
Git은 Untracked 파일을 아직 스탭샷(커밋)에 넣어지지 않은 파일이라고 본다.<br />
파일이 Tracked 상태가 되기 전까지는 Git은 절대 그 파일을 커밋하지 않는다.</p>

<h3 id="파일을-새로-추척하기">파일을 새로 추척하기</h3>
<p><code class="language-plaintext highlighter-rouge">git add</code></p>

<p><code class="language-plaintext highlighter-rouge">git add README</code> 명령을 실행하면 README 파일을 추척한다.<br />
git status 명령을 다시 실행하면 README 파일이 Tracked 상태이면서 커밋에 추가될 Staged 상태라는 것을 알 수 있다.</p>

<p><strong><em>“Changes to be committed”</em></strong> 에 들어 있는 파일은 <em>Staged 상태라는 것을 의미한다.</em><br />
커밋하면 git add를 실행한 시점의 파일이 커밋되어 저장소 히스토리에 남는다.</p>

<h3 id="modified-상태의-파일을-stage-하기">Modified 상태의 파일을 Stage 하기</h3>
<p><strong><em>“Changes not staged for commit”</em></strong> 은 수정한 파일이 <u>Tracked 상태이지만 아직 Staged 상태는 아니라는 것이다.</u><br />
Staged 상태로 만들려면 git add 명령을 실행해야 한다.<br />
<code class="language-plaintext highlighter-rouge">git add</code> 명령은 파일을 새로 추척할 때도 사용하고 수정한 파일을 Staged 상태로 만들 때도 사용한다.</p>
:ET