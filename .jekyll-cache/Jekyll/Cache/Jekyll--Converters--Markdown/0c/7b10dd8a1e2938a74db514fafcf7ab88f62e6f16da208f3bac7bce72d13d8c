I"`Y<h1 id="-110-옮기기">📌 110 옮기기</h1>

<blockquote>
  <p>난이도 ⭐⭐⭐</p>
</blockquote>

<h2 id="-문제">🚀 문제</h2>

<p><img src="https://user-images.githubusercontent.com/42318591/119221447-699f4c00-bb2a-11eb-879d-a18e255166aa.png" alt="image" /></p>

<p><img src="https://user-images.githubusercontent.com/42318591/119221453-6f952d00-bb2a-11eb-8fa7-e13e7fdb1caf.png" alt="image" /></p>

<p><br /></p>

<h2 id="-내-풀이">🚀 내 풀이</h2>

<blockquote>
  <p><a href="https://prgms.tistory.com/57?category=882795">월간 코드 팰린지 시즌2 : 5월 문제 해설</a></p>
</blockquote>

<p><code class="language-plaintext highlighter-rouge">s</code> 원소마다 DFS 로 풀고 제출했다가 온갖 시간 초과 결과를 마주한 후..⭐ (<code class="language-plaintext highlighter-rouge">s</code>의 최대 원소는 백 만개이니 너무나 당연한 결과다. 반성해야 돼..!!!) 프로그래머스 공식 해설을 본 후에 다시 풀이하게 되었다.</p>

<p><u>스택!!!!!을 사용하면 O(N) 으로 풀 수 있구나..</u> 작년에 풀었던 <a href="https://ansohxxn.github.io/programmers/kit8/">주식 가격</a> 문제가 생각났다.(이왕 이렇게 된거 주식 가격 문제도 스택을 사용해 다시 풀이했다. 이때 내가 스택으로 안 풀어 봤네..)</p>

<h3 id="-로직">💡 로직</h3>

<ul>
  <li>하나의 문자열 <code class="language-plaintext highlighter-rouge">s[i]</code>에 대해
    <ul>
      <li>1️⃣ 모든 “110” 을 찾아 그 개수(<code class="language-plaintext highlighter-rouge">count</code>)를 세고 + 제거한다.
        <ul>
          <li>이때 스택을 사용하면
            <ul>
              <li>\(O(3N = N)\) 선형시간으로 찾아낼 수 있으며</li>
              <li>11<u>110</u>0 👉 <u>110</u> 이렇게 110 제거를 통해 새롭게 만들어지는 110 또한 제거할 수 있게 된다. 11110 까지 스택에 들어있다가 110 은 제거하고 11 만 스택에 남게 되는데 이 상태에서 새로운 0 이 들어오면 다시 110 이 되야 제거 가능. <a href="https://ansohxxn.github.io/programmers/67/">올바른 괄호</a> 문제처럼 생각하면 된다.</li>
              <li>스택의 <code class="language-plaintext highlighter-rouge">top</code> 3 개가 “110” 이면 이 3 개를 <code class="language-plaintext highlighter-rouge">pop</code>한다. “110” 이 아니라면 현재 문자를 <code class="language-plaintext highlighter-rouge">push</code> 한다.</li>
            </ul>
          </li>
          <li>이 과정이 완료된 후 “110” 이 아예 없었다면 <code class="language-plaintext highlighter-rouge">answer[i]</code>에 <code class="language-plaintext highlighter-rouge">s[i]</code>를 그대로 넣고 종료한다. (이 경우엔 다음 과정 실행하면 안돼서)</li>
        </ul>
      </li>
      <li>2️⃣ 스택에 남아 있는 문자들(“110”이 모두 제거된 형태의 문자열)을 꺼내 문자열로 만듬과 동시에 <code class="language-plaintext highlighter-rouge">count</code> 개수의 연속된 “110” 문자열을 삽입할 위치가 될 인덱스를 찾는다.
        <ul>
          <li>이 삽입 위치가 될 인덱스는 <u>문자열의 오른쪽 끝에서부터 연속된 1 이 시작되는 곳.</u>이 되어야 한다. (그러니, 오른쪽 끝 문자가 0이면 그냥 맨 뒤에 추가)
            <ul>
              <li>왜냐하면 “111111…” <strong>연속된 1 보다 “110” 이 사전적으로 더 앞서기 때문</strong>이다. 예를 들어 스택에 “1011” 이렇게 남아 있는 상태였다면 <code class="language-plaintext highlighter-rouge">count</code> 개수의 연속된 “110” 은 10 ✔ 11 체크한 이 부분에 들어가야 할 것이다.</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>3️⃣ 이전 과정에서 구한 삽입 인덱스에(오른쪽에서부터 연속된 1이 시작되는 곳) <code class="language-plaintext highlighter-rouge">count</code> 개수의 연속된 “110”을 삽입하면 된다. 이렇게 완성된 문자열을 <code class="language-plaintext highlighter-rouge">answer[i]</code>에 넣고 다음 <code class="language-plaintext highlighter-rouge">s[i]</code> 문자열 검사하러 떠나면 된다.</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h3 id="-stack-사용한-풀이">🔥 stack 사용한 풀이</h3>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;stack&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
	<span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">size</span><span class="p">());</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">s</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">stack</span><span class="o">&lt;</span><span class="kt">char</span><span class="o">&gt;</span> <span class="n">st</span><span class="p">;</span>
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// s[i] 문자열에서 만들 수 있는 "110" 개수</span>
		
        <span class="c1">// 1️⃣ 모든 "110" 을 찾아 그 개수(count)를 세고 제거한다.</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">length</span><span class="p">();</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">st</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]);</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">st</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&gt;=</span> <span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
                <span class="c1">// 스택의 위에 있는 3 개를 일단 pop 시키자. (스택은 top 을 제외한 중간 원소 임의 접근 불가능하기 때문에 일단 빼내서 볼 수 밖에 없다. ㅠ)</span>
                <span class="kt">char</span> <span class="n">three</span> <span class="o">=</span> <span class="n">st</span><span class="p">.</span><span class="n">top</span><span class="p">();</span> <span class="n">st</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
				<span class="kt">char</span> <span class="n">two</span> <span class="o">=</span> <span class="n">st</span><span class="p">.</span><span class="n">top</span><span class="p">();</span> <span class="n">st</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
				<span class="kt">char</span> <span class="n">one</span> <span class="o">=</span> <span class="n">st</span><span class="p">.</span><span class="n">top</span><span class="p">();</span> <span class="n">st</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>

                <span class="c1">// 스택의 위에 있는 3 개가 1 1 0 이라면 count 를 증가시킨다. (이미 pop 시켰음)</span>
				<span class="k">if</span> <span class="p">(</span><span class="n">one</span> <span class="o">==</span> <span class="sc">'1'</span> <span class="o">&amp;&amp;</span> <span class="n">two</span> <span class="o">==</span> <span class="sc">'1'</span> <span class="o">&amp;&amp;</span> <span class="n">three</span> <span class="o">==</span> <span class="sc">'0'</span><span class="p">)</span> <span class="p">{</span>
					<span class="o">++</span><span class="n">count</span><span class="p">;</span>
					<span class="k">continue</span><span class="p">;</span>
				<span class="p">}</span>
                <span class="c1">// 아니라면 다시 스택에 넣어 준다.</span>
				<span class="k">else</span> <span class="p">{</span>
					<span class="n">st</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">one</span><span class="p">);</span>
					<span class="n">st</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">two</span><span class="p">);</span>
					<span class="n">st</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">three</span><span class="p">);</span>
				<span class="p">}</span>
			<span class="p">}</span>
		<span class="p">}</span>
        <span class="c1">// "110" 이 하나도 없는 문자열이라면 현재 모습 그대로 answer 에 넣고 끝낸다.</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
			<span class="n">answer</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
			<span class="k">continue</span><span class="p">;</span>
		<span class="p">}</span>

        <span class="c1">// 2️⃣ 스택에 남아 있는 문자들("110"이 모두 제거된 형태의 문자열)을 꺼내 문자열로 만듬과 동시에 count 개수의 연속된 "110" 문자열을 삽입할 위치가 될 인덱스를 찾는다. </span>
        <span class="c1">// 스택에 1011 이 있는 상태라면 1👉1👉0👉1 순으로 꺼내지게 되며 각각 str의 맨 앞에 삽입한다. 결론적으로 str은 "1011" 이 되고 인덱스는 2가 된다. </span>
		<span class="kt">int</span> <span class="n">insert_idx</span> <span class="o">=</span> <span class="n">st</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="c1">// 삽입할 위치가 될 인덱스</span>
		<span class="n">string</span> <span class="n">str</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span> 
        <span class="c1">// 스택에서 하나씩 꺼내면서 연속된 1 인지 검사. 인덱스 업뎃. 동시에 꺼낸 문자는 str 맨 앞에 삽입 </span>
		<span class="k">while</span> <span class="p">(</span><span class="o">!</span><span class="n">st</span><span class="p">.</span><span class="n">empty</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="n">st</span><span class="p">.</span><span class="n">top</span><span class="p">()</span> <span class="o">==</span> <span class="sc">'1'</span><span class="p">)</span> <span class="p">{</span>
			<span class="o">--</span><span class="n">insert_idx</span><span class="p">;</span> 
			<span class="n">str</span> <span class="o">=</span> <span class="n">st</span><span class="p">.</span><span class="n">top</span><span class="p">()</span> <span class="o">+</span> <span class="n">str</span><span class="p">;</span>
			<span class="n">st</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
		<span class="p">}</span>
        <span class="c1">// 연속된 1은 다 빼냈고, 스택에 있는 나머지 문자들 꺼내서 str 맨 앞에 삽입 </span>
		<span class="k">while</span> <span class="p">(</span><span class="o">!</span><span class="n">st</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span>
			<span class="n">str</span> <span class="o">=</span> <span class="n">st</span><span class="p">.</span><span class="n">top</span><span class="p">()</span> <span class="o">+</span> <span class="n">str</span><span class="p">;</span>
			<span class="n">st</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
		<span class="p">}</span>

        <span class="c1">// 3️⃣ 이전 과정에서 구한 삽입 인덱스에(오른쪽에서부터 연속된 1이 시작되는 곳) count 개수의 연속된 "110"을 삽입하면 된다.</span>
		<span class="k">while</span> <span class="p">(</span><span class="n">count</span><span class="o">--</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> 
			<span class="n">str</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">insert_idx</span><span class="p">,</span> <span class="s">"110"</span><span class="p">);</span>
        <span class="c1">// 완성! </span>
		<span class="n">answer</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">str</span><span class="p">;</span>
	<span class="p">}</span>

    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h3 id="-deque-사용한-풀이">🔥 deque 사용한 풀이</h3>

<p>다른 분의 풀이 중에 <code class="language-plaintext highlighter-rouge">deque</code>을 사용하신 분이 계셔서 적용해보았다. <code class="language-plaintext highlighter-rouge">deque</code> 은 여타 배열처럼 <code class="language-plaintext highlighter-rouge">[]</code> 써서 중간 원소에 대한 접근하는게 가능하다. 따라서 <code class="language-plaintext highlighter-rouge">deque</code>을 쓰면 스택처럼 일일이 빼고난 후에 검사할 필요는 없고, 뒤에 있는 세 원소가 110 인게 확인이 되면 그때서야 제거하면 된다. <code class="language-plaintext highlighter-rouge">deque</code>도, <code class="language-plaintext highlighter-rouge">stack</code>도 제거 연산이 O(1) 으로 매우 빠른 자료구조다! (deque 은 중간 원소 삭제가 아닌 <code class="language-plaintext highlighter-rouge">pop_back</code>, <code class="language-plaintext highlighter-rouge">pop_front</code> 한정)</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;deque&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
	<span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">size</span><span class="p">());</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">s</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">deque</span><span class="o">&lt;</span><span class="kt">char</span><span class="o">&gt;</span> <span class="n">dq</span><span class="p">;</span>
		<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
		
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">length</span><span class="p">();</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span> <span class="p">{</span>
			<span class="n">dq</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]);</span>
			<span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">dq</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="o">&gt;=</span> <span class="mi">3</span> <span class="o">&amp;&amp;</span> <span class="n">dq</span><span class="p">[</span><span class="n">n</span> <span class="o">-</span> <span class="mi">3</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'1'</span> <span class="o">&amp;&amp;</span> <span class="n">dq</span><span class="p">[</span><span class="n">n</span> <span class="o">-</span> <span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'1'</span> <span class="o">&amp;&amp;</span> <span class="n">dq</span><span class="p">[</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'0'</span><span class="p">)</span> <span class="p">{</span>
				<span class="o">++</span><span class="n">count</span><span class="p">;</span>
				<span class="n">dq</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span> 
				<span class="n">dq</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span> 
				<span class="n">dq</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>
			<span class="p">}</span>
		<span class="p">}</span>

		<span class="k">if</span> <span class="p">(</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
			<span class="n">answer</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
			<span class="k">continue</span><span class="p">;</span>
		<span class="p">}</span>

		<span class="kt">int</span> <span class="n">insert_idx</span> <span class="o">=</span> <span class="n">dq</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
		<span class="n">string</span> <span class="n">str</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
		<span class="kt">bool</span> <span class="n">end_111</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">dq</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="o">--</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">end_111</span> <span class="o">&amp;&amp;</span> <span class="n">dq</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'1'</span><span class="p">)</span> <span class="o">--</span><span class="n">insert_idx</span><span class="p">;</span>
			<span class="k">else</span> <span class="n">end_111</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
			<span class="n">str</span> <span class="o">=</span> <span class="n">dq</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">str</span><span class="p">;</span>
		<span class="p">}</span>

		<span class="k">while</span> <span class="p">(</span><span class="n">count</span><span class="o">--</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> 
			<span class="n">str</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">insert_idx</span><span class="p">,</span> <span class="s">"110"</span><span class="p">);</span>
		<span class="n">answer</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">str</span><span class="p">;</span>
	<span class="p">}</span>

    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET