I"w7<h1 id="dfs-타겟-넘버">[DFS] 타겟 넘버</h1>

<blockquote>
  <p>난이도 ⭐⭐</p>
</blockquote>

<h2 id="문제">문제</h2>

<p><img src="https://user-images.githubusercontent.com/42318591/96951470-812c3d00-1527-11eb-9c35-3570963c1c69.png" alt="image" /></p>

<p><br /></p>

<h2 id="풀이">풀이</h2>

<p>이 문제는 풀지 못 했다. 더군다나 문제도 잘 못 이해했다. 순열처럼 <code class="language-plaintext highlighter-rouge">numbers</code> 원소들의 자리들도 바꿔야 하는건 줄 알았는데 생각해보니 그렇게는 안해도 됐었다.. 그냥 <code class="language-plaintext highlighter-rouge">-</code>, <code class="language-plaintext highlighter-rouge">+</code> 부호를 어디에 붙일지만 고려하면 될 뿐이었다. 아무튼간에.. 풀이를 구글링해보니 내가 백준에서 풀었던 문제들과 유형이 똑같다는걸 깨달았다. 이런게 DFS구나 !!! DFS 문제 더 많이 풀어봐야 겠다고 느꼈다. 재귀는 언제나 좀 낯설다. 개념이.. ㅠㅠ 아무튼 ~~ 할 수 ItDa 💛💛</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">DFS</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">numbers</span><span class="p">,</span> <span class="kt">int</span><span class="o">&amp;</span> <span class="n">answer</span><span class="p">,</span> <span class="kt">int</span> <span class="n">target</span><span class="p">,</span> <span class="kt">int</span> <span class="n">count</span><span class="p">,</span> <span class="kt">int</span> <span class="n">sum</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">count</span> <span class="o">==</span> <span class="n">numbers</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">sum</span> <span class="o">+</span> <span class="n">numbers</span><span class="p">[</span><span class="n">count</span><span class="p">]</span> <span class="o">==</span> <span class="n">target</span><span class="p">)</span> <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">sum</span> <span class="o">-</span> <span class="n">numbers</span><span class="p">[</span><span class="n">count</span><span class="p">]</span> <span class="o">==</span> <span class="n">target</span><span class="p">)</span> <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="n">DFS</span><span class="p">(</span><span class="n">numbers</span><span class="p">,</span> <span class="n">answer</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">sum</span> <span class="o">+</span> <span class="n">numbers</span><span class="p">[</span><span class="n">count</span><span class="p">]);</span>
    <span class="n">DFS</span><span class="p">(</span><span class="n">numbers</span><span class="p">,</span> <span class="n">answer</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">sum</span> <span class="o">-</span> <span class="n">numbers</span><span class="p">[</span><span class="n">count</span><span class="p">]);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">numbers</span><span class="p">,</span> <span class="kt">int</span> <span class="n">target</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="n">DFS</span><span class="p">(</span><span class="n">numbers</span><span class="p">,</span> <span class="n">answer</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">numbers</code> 원소들의 순서는 그대로 유지한 체로, 각각 재귀 과정에서 두번의 DFS 재귀를 진행한다. 한번은 <code class="language-plaintext highlighter-rouge">+</code> 하는걸로, 한번은 <code class="language-plaintext highlighter-rouge">-</code> 하는걸로.</p>
</blockquote>

<blockquote>
  <p>한 단계씩 재귀를 할 때마다 종료 조건에 수렴하도록 인수를 넘겨야 한다.</p>
</blockquote>

<p><em>target이 2인 [1, 3, 5, 7, 10] 을 예로 들자면</em></p>

<ul>
  <li>DFS(0, 0)
    <ul>
      <li>1️⃣ DFS(1, 0 + 1)
        <ul>
          <li>1️⃣ DFS(2, 0 + 1 + 3)
            <ul>
              <li>1️⃣ DFS(3, 0 + 1 + 3 + 5)
                <ul>
                  <li>1️⃣ DFS(4, 0 + 1 + 3 + 5 + 7)
                    <ul>
                      <li>0 + 1 + 3 + 5 + 7 <code class="language-plaintext highlighter-rouge">+</code> 10 은 <code class="language-plaintext highlighter-rouge">target</code>이 아니므로 <code class="language-plaintext highlighter-rouge">answer</code>를 증가시키지 않는다.</li>
                      <li>0 + 1 + 3 + 5 + 7 <code class="language-plaintext highlighter-rouge">-</code> 10 은 <code class="language-plaintext highlighter-rouge">target</code>이 아니므로 <code class="language-plaintext highlighter-rouge">answer</code>를 증가시키지 않는다.</li>
                      <li><code class="language-plaintext highlighter-rouge">return</code> 종료</li>
                    </ul>
                  </li>
                  <li>2️⃣ DFS(4, 0 + 1 + 3 + 5 - 7)
                    <ul>
                      <li>0 + 1 + 3 + 5 - 7 <code class="language-plaintext highlighter-rouge">+</code> 10 은 <code class="language-plaintext highlighter-rouge">target</code>이 아니므로 <code class="language-plaintext highlighter-rouge">answer</code>를 증가시키지 않는다.</li>
                      <li>0 + 1 + 3 + 5 - 7 <code class="language-plaintext highlighter-rouge">-</code> 10 은 <code class="language-plaintext highlighter-rouge">target</code>이 아니므로 <code class="language-plaintext highlighter-rouge">answer</code>를 증가시키지 않는다.</li>
                      <li><code class="language-plaintext highlighter-rouge">return</code> 종료</li>
                    </ul>
                  </li>
                </ul>
              </li>
              <li>2️⃣ DFS(3, 0 + 1 + 3 - 5)
                <ul>
                  <li>1️⃣ DFS(4, 0 + 1 + 3 - 5 + 7)
                    <ul>
                      <li>0 + 1 + 3 - 5 + 7 <code class="language-plaintext highlighter-rouge">+</code> 10 은 <code class="language-plaintext highlighter-rouge">target</code>이 아니므로 <code class="language-plaintext highlighter-rouge">answer</code>를 증가시키지 않는다.</li>
                      <li>0 + 1 + 3 - 5 + 7 <code class="language-plaintext highlighter-rouge">-</code> 10 은 <code class="language-plaintext highlighter-rouge">target</code>이 아니므로 <code class="language-plaintext highlighter-rouge">answer</code>를 증가시키지 않는다.</li>
                      <li><code class="language-plaintext highlighter-rouge">return</code> 종료</li>
                    </ul>
                  </li>
                  <li>2️⃣ DFS(4, 0 + 1 + 3 - 5 - 7)
                    <ul>
                      <li>✨ 0 + 1 + 3 - 5 - 7 <code class="language-plaintext highlighter-rouge">+</code> 10 은 <code class="language-plaintext highlighter-rouge">target</code>이 맞으므로 <code class="language-plaintext highlighter-rouge">answer</code>를 증가시킨다.</li>
                      <li>0 + 1 + 3 - 5 - 7 <code class="language-plaintext highlighter-rouge">-</code> 10 은 <code class="language-plaintext highlighter-rouge">target</code>이 아니므로 <code class="language-plaintext highlighter-rouge">answer</code>를 증가시키지 않는다.</li>
                      <li><code class="language-plaintext highlighter-rouge">return</code> 종료</li>
                    </ul>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>…</p>

<p>대충 이런식이다!</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">DFS</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">numbers</span><span class="p">,</span> <span class="kt">int</span><span class="o">&amp;</span> <span class="n">answer</span><span class="p">,</span> <span class="kt">int</span> <span class="n">target</span><span class="p">,</span> <span class="kt">int</span> <span class="n">count</span><span class="p">,</span> <span class="kt">int</span> <span class="n">sum</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">count</span> <span class="o">==</span> <span class="n">numbers</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">sum</span> <span class="o">+</span> <span class="n">numbers</span><span class="p">[</span><span class="n">count</span><span class="p">]</span> <span class="o">==</span> <span class="n">target</span><span class="p">)</span> <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">sum</span> <span class="o">-</span> <span class="n">numbers</span><span class="p">[</span><span class="n">count</span><span class="p">]</span> <span class="o">==</span> <span class="n">target</span><span class="p">)</span> <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="n">DFS</span><span class="p">(</span><span class="n">numbers</span><span class="p">,</span> <span class="n">answer</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">sum</span> <span class="o">+</span> <span class="n">numbers</span><span class="p">[</span><span class="n">count</span><span class="p">]);</span>
    <span class="n">DFS</span><span class="p">(</span><span class="n">numbers</span><span class="p">,</span> <span class="n">answer</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">sum</span> <span class="o">-</span> <span class="n">numbers</span><span class="p">[</span><span class="n">count</span><span class="p">]);</span>
<span class="p">}</span>
</code></pre></div></div>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">DFS</code> 그래프의 모든 노드를 순회하는 방법 중 하나로 일단 깊숙이 계속해서 끝까지 들어간 후 되돌아 와 또 내려갈 곳을 찾으면 또 깊숙이 내려간다.
ㅇㅇ
<code class="language-plaintext highlighter-rouge">count</code>는 <code class="language-plaintext highlighter-rouge">numbers</code>의 인덱스로도 활용되며 재귀 단계의 깊이를 뜻하기도 한다. 끝까지 도달했다면 종료해야 한다. <em>if (count == numbers.size() - 1)</em></p>
</blockquote>

<ol>
  <li>현재 단계(인덱스)가 <code class="language-plaintext highlighter-rouge">+</code>인 버전에서의 다음 단계 재귀 진행. 다음 단계에서도 똑같이 <code class="language-plaintext highlighter-rouge">+</code>, <code class="language-plaintext highlighter-rouge">-</code> 두 단계 버전으로 각각 재귀를 하게 된다.</li>
  <li>현재 단계(인덱스)가 <code class="language-plaintext highlighter-rouge">-</code>인 버전에서의 다음 단계 재귀 진행. 다음 단계에서도 똑같이 <code class="language-plaintext highlighter-rouge">+</code>, <code class="language-plaintext highlighter-rouge">-</code> 두 단계 버전으로 각각 재귀를 하게 된다.</li>
</ol>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET