I"*<h1 id="해시-완주하지-못한-선수">[해시] 완주하지 못한 선수</h1>

<blockquote>
  <p>난이도 ⭐</p>
</blockquote>

<blockquote>
  <p>3 / 3  ⭕</p>
</blockquote>

<h2 id="문제">문제</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>수많은 마라톤 선수들이 마라톤에 참여하였습니다. 
단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.

마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 
완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요.
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>📢 제한사항

- 마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다.
- completion의 길이는 participant의 길이보다 1 작습니다.
- 참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다.
- 참가자 중에는 동명이인이 있을 수 있습니다.
</code></pre></div></div>

<p><br /></p>

<h2 id="내-풀이">내 풀이</h2>

<blockquote>
  <p>#include &lt;algorithm&gt;</p>
</blockquote>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">participant</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">completion</span><span class="p">)</span> <span class="p">{</span>
    
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    
    <span class="n">sort</span><span class="p">(</span><span class="n">participant</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">participant</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
    <span class="n">sort</span><span class="p">(</span><span class="n">completion</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">completion</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>   
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">participant</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">participant</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="n">completion</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
        <span class="p">{</span>
            <span class="n">answer</span> <span class="o">=</span> <span class="n">participant</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<blockquote>
  <p>완주 하지 못한 사람은 딱 한명!</p>
</blockquote>

<ul>
  <li>먼저 두 컨테이너 participant, completion를 정렬시킨다.</li>
  <li>정렬시킨 후 participant와 completion을 차례대로 비교하다가 일치 하지 않는 값이 나온다면 바로 그게 완주하지 못한 사람의 이름이다.</li>
</ul>

<p><br /></p>

<h2 id="다른-풀이">다른 풀이</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;unordered_map&gt;</span><span class="cp">
</span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">participant</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">completion</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="n">unordered_map</span><span class="o">&lt;</span><span class="n">string</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">strMap</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="n">elem</span> <span class="o">:</span> <span class="n">completion</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">strMap</span><span class="p">.</span><span class="n">end</span><span class="p">()</span> <span class="o">==</span> <span class="n">strMap</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">elem</span><span class="p">))</span>
            <span class="n">strMap</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">make_pair</span><span class="p">(</span><span class="n">elem</span><span class="p">,</span> <span class="mi">1</span><span class="p">));</span>
        <span class="k">else</span>
            <span class="n">strMap</span><span class="p">[</span><span class="n">elem</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
 
    <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="n">elem</span> <span class="o">:</span> <span class="n">participant</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">strMap</span><span class="p">.</span><span class="n">end</span><span class="p">()</span> <span class="o">==</span> <span class="n">strMap</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">elem</span><span class="p">)){</span>
            <span class="n">answer</span> <span class="o">=</span> <span class="n">elem</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span><span class="p">{</span>
            <span class="n">strMap</span><span class="p">[</span><span class="n">elem</span><span class="p">]</span><span class="o">--</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">strMap</span><span class="p">[</span><span class="n">elem</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">){</span>
                <span class="n">answer</span> <span class="o">=</span> <span class="n">elem</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<blockquote>
  <p>#include &lt;unordered_map&gt;</p>
</blockquote>

<ul>
  <li>1️⃣ <code class="language-plaintext highlighter-rouge">Hash Map</code>에 comletion을 통하여 (완주한 사람 이름, 동명이인 명수)를 Key, Value로 하여 저장한다.
    <ul>
      <li><u>map</u>은 중복 키를 허용하지 않으므로
        <ul>
          <li>찾는 키가 없다면 if(strMap.end() == strMap.find(elem))
            <ul>
              <li>(완주한 사람 이름, 1)로 추가하고</li>
            </ul>
          </li>
          <li>찾는 키가 있다면, 즉 동명이인이 있다면
            <ul>
              <li>해당 키의 value 값을 1 증가시킨다.</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>2️⃣ participant 와 해당 해시 맵 원소들을 비교하여 포함되어 있는지 확인한다.
    <ul>
      <li>맵에 포함되어 있지 않다면 <u>그게 바로 정답</u></li>
      <li>⭐맵에 포함되어 있다면
        <ul>
          <li>해당 Key에 대응되는 Value를 1 감소시킨다.</li>
          <li>value 값이 0 이라면 그게 바로 정답
            <ul>
              <li>맵에 포함되어 있기는 한데, 즉 Key는 있는데 value 값은 0 이 되었다면 <u>동명이인이 있긴 한데</u> 다른 동명이인들은 다 완주 했다는 의미이므로 그 사람이 바로 완주 못한 사람!
                <ul>
                  <li>ex) 참가자 목록 [a, a, a]  완주자 목록 [a, a] 이런 상태인 것.</li>
                </ul>
              </li>
            </ul>
          </li>
          <li>value 값이 0 이 아니라면</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET