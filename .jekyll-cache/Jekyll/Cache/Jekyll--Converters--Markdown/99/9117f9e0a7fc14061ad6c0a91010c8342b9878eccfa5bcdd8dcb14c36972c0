I"m&<p class="notice--warning">인프런에 있는 김태원님의 강의 <strong>IT 취업을 위한 알고리즘 문제풀이 with C/C++</strong> 를 듣고 문제를 푼 후 정리한 오답노트입니다. 😀</p>

<h2 id="9-모두의-약수">9. 모두의 약수</h2>

<h3 id="문제-설명">문제 설명</h3>

<blockquote>
  <p>제한 시간 1초</p>
</blockquote>

<p>8 을 입력하면 1 ~ 8 범위의 8 개 정수의 각각 <code class="language-plaintext highlighter-rouge">약수의 개수</code>를 순서대로 출력한다. 제한시간은 1초다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>입력 👉 8
출력 👉 1 2 2 3 2 4 2 4
</code></pre></div></div>

<p><br /></p>

<h3 id="내-답안">내 답안</h3>

<blockquote>
  <p>입력되는 숫자가 큰 수면 1 초를 넘어가므로 내 답은 틀린 답변. 작은 숫자 에서나 괜찮음.</p>
</blockquote>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">N</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">N</span><span class="p">);</span>

<span class="n">printf</span><span class="p">(</span><span class="s">"%d "</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>  <span class="c1">// 1의 약수는 1개</span>

<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">i</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>  <span class="c1">// 2 ~ i/2 까지의 수 중 약수가 있는지 검사한다. i의 약수 범위는 1~i/2 를 넘지 않는다.</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">%</span> <span class="n">j</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
            <span class="n">count</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"%d "</span><span class="p">,</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">2</span><span class="p">);</span>  <span class="c1">//  1 과 자기 자신은 언제나 약수. 이 둘을 count에 더해줌.</span>
<span class="p">}</span>
<span class="n">printf</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
</code></pre></div></div>
<ul>
  <li><u>이중 for 문</u>을 사용하여 일일이 약수를 구하기
    <ul>
      <li>👉 입력 숫자가 커지면 1 초 넘어간다.</li>
      <li>전부 검사하지 않고 어떤 규칙을 이용하여 꼼수를 쓰는 것이 좋다.</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h3 id="정답-풀이">정답 풀이</h3>

<blockquote>
  <p>6 의 <code class="language-plaintext highlighter-rouge">약수</code>는 1, 2, 3, 6. 👉 6 은 1, 2, 3, 6 의 <code class="language-plaintext highlighter-rouge">배수</code></p>
</blockquote>

<ul>
  <li>N 의 약수 개수 = 1 ~ N 까지의 각각의 수들 中 N 이 배수가 되는 것의 총 개수</li>
  <li>1 ~ 6 중 <u>4 의 약수 개수</u>를 구한다면
    <ul>
      <li>1 의 배수들
        <ul>
          <li>1 2 3 <u>4</u> 5 6
            <ul>
              <li>cnt[4] = cnt[4] + 1</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>2 의 배수들
        <ul>
          <li>2 <u>4</u> 6
            <ul>
              <li>cnt[4] = cnt[4] + 1</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>3 의 배수들
        <ul>
          <li>3 6</li>
        </ul>
      </li>
      <li>4 의 배수들
        <ul>
          <li><u>4</u>
            <ul>
              <li>cnt[4] = cnt[4] + 1</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>5 의 배수들
        <ul>
          <li>5</li>
        </ul>
      </li>
      <li>6 의 배수들
        <ul>
          <li>6</li>
        </ul>
      </li>
      <li>4의 약수는 3 개다.
        <ul>
          <li>4 는 1, 2, 4 의 배수이다.
            <ul>
              <li>cnt[4] 👉 3</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">cnt[j]</code> : j 가 어떤 수의 배수가 될 때마다 이 <code class="language-plaintext highlighter-rouge">cnt[j]</code>를 1씩 증가시킨다. 연산을 다 완료하고나면 최종적으로 <code class="language-plaintext highlighter-rouge">cnt[j]</code>는 j 의 약수 개수가 된다.</p>
</blockquote>

<blockquote>
  <p>N 의 배수들은 N, N+N, N+N+N, … 이다. N의 배수들의 약수는 N 을 포함한다.</p>
</blockquote>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span><span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">cnt</span><span class="p">[</span><span class="mi">50001</span><span class="p">];</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="c1">//freopen("input.txt", "rt", stdin);</span>
	<span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>
	<span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
	<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span> <span class="n">j</span><span class="o">=</span><span class="n">j</span><span class="o">+</span><span class="n">i</span><span class="p">){</span>
			<span class="n">cnt</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"%d "</span><span class="p">,</span> <span class="n">cnt</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">j = j + i</code>
    <ul>
      <li>i = 2 일 때, <u>2의 배수들을 알려면 2 부터 시작해서 2 씩 더해나가야</u> 한다.
        <ul>
          <li>2 에서 시작하여 2 씩 더한 “2 4 6 8” 은 2 의 배수.</li>
          <li>cnt[2], cnt[4], cnt[6], cnt[8] 1 씩 증가시킴</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>n = 8 이었을 때
    <ul>
      <li>그냥 i 마다 모든 1 ~ i 를 검사했다면 8 * 8 = 64 번의 연산으로 약수인지 검사했어야 할 것이다.</li>
      <li><code class="language-plaintext highlighter-rouge">j = j + i</code> 즉, 각각의 배수들만 검사하면 총 연산이 8 + 4 + 2 + 2 + 1 + 1 + 1 + 1 = 20 번의 연산으로 크게 줄어드는 것을 볼 수 있다.
        <ul>
          <li>이렇게 하면 큰 숫자를 입력해도 1 초를 넘기지 않는다.</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET