I"+#<h1 id="-가장-큰-정사각형-찾기">📌 가장 큰 정사각형 찾기</h1>

<blockquote>
  <p>난이도 ⭐⭐</p>
</blockquote>

<h2 id="-문제">🚀 문제</h2>

<p><img src="https://user-images.githubusercontent.com/42318591/107170959-04a16980-6a05-11eb-95c9-18b51c18de2b.png" alt="image" /></p>

<p><br /></p>

<h2 id="-내-풀이-">🚀 내 풀이 ⭕</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span><span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span><span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">board</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">dp</span><span class="p">(</span><span class="n">board</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">board</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">size</span><span class="p">()));</span>
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">board</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">board</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span><span class="p">();</span> <span class="n">j</span><span class="o">++</span><span class="p">){</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">j</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">board</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> 
                <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">board</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
            <span class="k">else</span>
                <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">],</span> <span class="n">min</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">],</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]))</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
            
            <span class="k">if</span> <span class="p">(</span><span class="n">max</span> <span class="o">&lt;</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">])</span> 
                <span class="n">max</span> <span class="o">=</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="n">answer</span> <span class="o">=</span> <span class="n">max</span> <span class="o">*</span> <span class="n">max</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/42318591/107177031-30781b80-6a14-11eb-85d9-ea4cf8106114.png" alt="image" /></p>

<p><strong>dp[i][j]는 board[i][j]를 “우하단”으로 하는 최대 크기의 정사각형의 길이가 된다.</strong></p>

<p><img src="https://user-images.githubusercontent.com/42318591/107178373-5eab2a80-6a17-11eb-8ee9-2aa205995dec.png" alt="image" /></p>

<p>뭔가 말로 설명하기가 어렵다.. 위와 같은 식으로 영향을 받기 때문에 이런 점화식이 만들어진다고 보면 될 것 같다. 다이나믹 프로그래밍이라 위쪽에서 아래쪽으로(행). 왼쪽에서 오른쪽으로(열) 진행되기 때문에 해당 원소가 정사각형이 될 수 있는지는 사실상 <em>dp[i-1][j-1], dp[i][j-1], dp[i-1][j]</em> 이렇게 3 개를 살펴보면 된다.</p>

<blockquote>
  <p>점화식 👉 <strong>dp[i][j] = Min(dp[i-1][j-1], dp[i][j-1], dp[i-1][j]) + 1</strong></p>
</blockquote>

<ul>
  <li>이웃한 3개 영역 중 가장 최소 값에다가 1 을 더하면 된다.
    <ul>
      <li>아래의 <code class="language-plaintext highlighter-rouge">?</code> 자리에 들어갈 수는 2 가 된다. ( = <code class="language-plaintext highlighter-rouge">1</code> + 1)
        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>2 1
2 ? 
</code></pre></div>        </div>
      </li>
      <li>아래의 <code class="language-plaintext highlighter-rouge">?</code> 자리에 들어갈 수는 1 이 된다. ( = <code class="language-plaintext highlighter-rouge">0</code> + 1)
        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0 1
1 ? 
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
  <li>첫 행이거나 첫 열이거나 <code class="language-plaintext highlighter-rouge">board[i][j]</code> 값이 0 이면 <em>dp[i][j] = board[i][j]</em>
    <ul>
      <li>첫 행과 첫 열은 3 개 중 작은 값을 뽑을 수가 없으며 최대로 만들 수 있는 정사각형 길이가 1 밖에 되지 않는다. 따라서 그냥 자기 자신의 값으로 대입한다.</li>
      <li><code class="language-plaintext highlighter-rouge">board[i][j]</code> 값이 0 일땐 정사각형이 될 수 없으므로 그냥 0 으로 대입.</li>
    </ul>
  </li>
  <li>알고리즘 헤더의 min 함수가 인수를 2 개만 받기 때문에 코드에선 <em>min(dp[i - 1][j - 1], min(dp[i - 1][j], dp[i][j - 1]))</em> 라고 나눠서 구현했다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0 1 1 1
1 1 2 2
1 2 2 3
0 0 1 0
</code></pre></div></div>

<p>최종적으로 문제에서 준 예제로는 <code class="language-plaintext highlighter-rouge">dp</code> 배열은 위와 같은 모습이 될 것이다. 3이 제일 최대값이기 때문에 넓이를 구하는 답은 \(3^2 = 9\)가 된다.</p>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET