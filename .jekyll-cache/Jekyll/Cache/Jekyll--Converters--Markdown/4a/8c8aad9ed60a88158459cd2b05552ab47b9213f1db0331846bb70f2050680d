I"&a<h2 id="-난이도">🚀 난이도</h2>

<blockquote>
  <p>💛 골드 3</p>
</blockquote>

<p><br /></p>

<h2 id="-문제">🚀 문제</h2>

<blockquote>
  <p><a href="https://www.acmicpc.net/problem/20366">https://www.acmicpc.net/problem/20366</a></p>
</blockquote>

<p><img src="https://user-images.githubusercontent.com/42318591/121774357-22522b80-cbbd-11eb-80b5-63953c11b19d.png" alt="image" /></p>

<p><br /></p>

<h2 id="-내-풀이">🚀 내 풀이</h2>

<p>어려웠다.. 결국 다른 분들의 풀이로 공부를 했던 문제였다. 😅</p>

<h3 id="-첫-번째-풀이-조합">🔥 첫 번째 풀이 (조합)</h3>

<blockquote>
  <p>코드 출처 블로그 <a href="https://imnotabear.tistory.com/379">https://imnotabear.tistory.com/379</a></p>
</blockquote>

<p>최대 입력 크기가 600 이기 때문에 서로 다른 4 개의 눈 덩이 조합을 뽑는다면 시간 초과가 발생할 것이다.(<code class="language-plaintext highlighter-rouge">600 C 4</code>) 우선 2 개의 눈덩이끼리의 조합을 구하여 그 눈덩이들을 묶어 나열한다.(이를 <code class="language-plaintext highlighter-rouge">snowman</code> 라고 하겠다.) 눈덩이 2 개로 눈사람 하나를 만드는 것이기 때문에 이 bind 에서 엘사의 눈사람, 안나의 눈사람으로서 2 개를 뽑는다. 즉, 눈덩이 2 개를 뽑아 하나의 원소로서 묶어 나열한 <code class="language-plaintext highlighter-rouge">snowman</code> 에서 또 2 개를 뽑아 눈사람 2 개를 조합으로 뽑는 식이다. 여기까지만 생각해보면 <code class="language-plaintext highlighter-rouge">N C 2 * N C 2</code> 가 되어 엄청나게 큰 입력 크기가 될 것 같지만..</p>

<p>문제에서 구하고자 하는 것은 엘사 눈사람과 안나 눈사람 <strong>“최소 길이 차이”</strong>를 구하는 것이기 때문에 눈덩이 2 개를 조합으로 뽑아 묶아 나열한 <code class="language-plaintext highlighter-rouge">snowman</code> 를 <u>먼저 정렬을 한 후</u>, <u>각 원소마다 자신의 바로 뒤에 있는 것을 선택하여 그것과 키 차이를 구하면 된다.</u> 오름차순으로 정렬을 한 상태인데다가 최소 길이 차이를 구하는 것이기에 자신의 뒤에 있는, 즉 자신 보다 키가 큰 눈사람들 중 전부 다 비교할 필요 없이 그냥 바로 뒤에 있는 눈사람을 선택해주면 되는 것이다. 그게 바로 자신보다 키 큰 눈 사람 중에서 자신과 가장 최소로 차이 나는 눈사람이 되는 것이기 때문이다! (‘자신’을 안나 눈사람, ‘안나 눈사람 보다 큰 눈사람들 중에서 가장 최소로 차이 나는 눈사람’을 엘사 눈사람이라고 하자.)따라서 이때의 시간 복잡도는 <code class="language-plaintext highlighter-rouge">N C 2 * N C 2</code> 이 아닌 대략 <code class="language-plaintext highlighter-rouge">N C 2</code> 가 된다.</p>

<p>다만! 서로 다른 눈덩이를 써야하기 때문에 뽑힌 4 개의 눈덩이는 같은 index 여서는 안된다. 모두 다른 인덱스여야 한다! 두 눈덩이(인덱스)를 뽑아 모아둔 <code class="language-plaintext highlighter-rouge">snowman</code>에서 또 2 개를 뽑는 것이다 보니 뽑은 두 눈사람 중 같은 눈덩이가(즉 인덱스가 동일한) 있을 수 있다.</p>

<p>따라서 <u>정렬된 상태에서 현재 안나의 눈사람으로 설정된 눈사람 중 뒤에 위치한 눈사람들 중에서 넷 다 서로 다른 눈덩이라는 전제가 처음으로 성립하는 눈사람을 엘사 눈사람으로 지정한 후 두 눈사람의 키 차이를 구하면 될 것이다.</u> <code class="language-plaintext highlighter-rouge">N C 2</code> 의 시간 복잡도 동안 차례로 안나의 눈사람으로 설정한 후 두 눈 사람의 키 차이를 구하여 최소값을 업데이트 해 나가면 된다.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;bits/stdc++.h&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="k">struct</span> <span class="nc">Elem</span> <span class="p">{</span> <span class="kt">int</span> <span class="n">index1</span><span class="p">,</span> <span class="n">index2</span><span class="p">,</span> <span class="n">sum</span><span class="p">;</span> <span class="p">};</span> <span class="c1">// 이 구조체 하나가 눈사람이나 마찬가지다. index 1,2 로 두 눈덩이 구분(인덱스), sum 은 눈사람 길이가 됨. </span>
<span class="kt">bool</span> <span class="nf">cmp</span><span class="p">(</span><span class="k">const</span> <span class="n">Elem</span><span class="o">&amp;</span> <span class="n">a</span><span class="p">,</span> <span class="k">const</span> <span class="n">Elem</span><span class="o">&amp;</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
	<span class="k">return</span> <span class="n">a</span><span class="p">.</span><span class="n">sum</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">.</span><span class="n">sum</span><span class="p">;</span> <span class="c1">// 눈사람 키 별로 정렬</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="n">freopen</span><span class="p">(</span><span class="s">"input.txt"</span><span class="p">,</span> <span class="s">"r"</span><span class="p">,</span> <span class="n">stdin</span><span class="p">);</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
	<span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span> <span class="n">cout</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>

	<span class="kt">int</span> <span class="n">N</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span><span class="p">;</span>

	<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">snow</span><span class="p">(</span><span class="n">N</span><span class="p">);</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
		<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">snow</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>

	<span class="c1">// 1️⃣ 두 눈덩이의 조합, 즉 NC2 개의 조합을 구한다. 이를 snowman 에 저장. 즉, 만들 수 있는 눈사람들 나열!</span>
	<span class="n">vector</span><span class="o">&lt;</span><span class="n">Elem</span><span class="o">&gt;</span> <span class="n">snowman</span><span class="p">;</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span>
			<span class="n">snowman</span><span class="p">.</span><span class="n">push_back</span><span class="p">({</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">snow</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">snow</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="p">});</span>
	
	<span class="c1">// 2️⃣ 눈사람들 키 별로 정렬</span>
	<span class="n">sort</span><span class="p">(</span><span class="n">snowman</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">snowman</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">cmp</span><span class="p">);</span>

	<span class="c1">// 3️⃣ 정렬된 snowman 을 순회하면서 각 원소를 안나 눈사람으로 설정한 후 그 뒤에 있는 것들 중 (즉, 안나보다 키 큰 눈사람) </span>
	<span class="c1">// 처음으로 서로 다른 4 개의 눈덩이를 사용한 경우가 되는 눈사람을 엘사 눈사람으로 설정한 후 키 차이를 구하고 바~~~로 빠져나오면 된다.  </span>
	<span class="c1">// 이러면 거의 NC2 의 시간복잡도 보장할 것이다.</span>
	<span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">INT_MAX</span><span class="p">;</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">snowman</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">Elem</span> <span class="n">anna</span> <span class="o">=</span> <span class="n">snowman</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">snowman</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span> <span class="p">{</span>
			<span class="n">Elem</span> <span class="n">elsa</span> <span class="o">=</span> <span class="n">snowman</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">elsa</span><span class="p">.</span><span class="n">index1</span> <span class="o">!=</span> <span class="n">anna</span><span class="p">.</span><span class="n">index1</span> <span class="o">&amp;&amp;</span> <span class="n">elsa</span><span class="p">.</span><span class="n">index1</span> <span class="o">!=</span> <span class="n">anna</span><span class="p">.</span><span class="n">index2</span> <span class="o">&amp;&amp;</span> <span class="n">elsa</span><span class="p">.</span><span class="n">index2</span> <span class="o">!=</span> <span class="n">anna</span><span class="p">.</span><span class="n">index1</span> <span class="o">&amp;&amp;</span> <span class="n">elsa</span><span class="p">.</span><span class="n">index2</span> <span class="o">!=</span> <span class="n">anna</span><span class="p">.</span><span class="n">index2</span><span class="p">)</span> <span class="p">{</span>
				<span class="n">answer</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">answer</span><span class="p">,</span> <span class="n">elsa</span><span class="p">.</span><span class="n">sum</span> <span class="o">-</span> <span class="n">anna</span><span class="p">.</span><span class="n">sum</span><span class="p">);</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h3 id="-두-번째-풀이-투포인터">🔥 두 번째 풀이 (투포인터)</h3>

<blockquote>
  <p>코드 출처 블로그 <a href="https://velog.io/@pss407/%EB%B0%B1%EC%A4%8020366-%EA%B0%99%EC%9D%B4-%EB%88%88%EC%82%AC%EB%9E%8C-%EB%A7%8C%EB%93%A4%EB%9E%98">https://velog.io/@pss407/%EB%B0%B1%EC%A4%8020366-%EA%B0%99%EC%9D%B4-%EB%88%88%EC%82%AC%EB%9E%8C-%EB%A7%8C%EB%93%A4%EB%9E%98</a></p>
</blockquote>

<p><img src="https://user-images.githubusercontent.com/42318591/126898312-1f6b2d2a-bee9-4605-b511-25f49dcdaf24.png" alt="image" /></p>

<p>안나의 눈사람에 사용될 두 눈덩이를 먼저 고정시켜 놓은 후 (<code class="language-plaintext highlighter-rouge">i</code>와 <code class="language-plaintext highlighter-rouge">j</code>를 사용) <u>이 안나의 눈사람을 기준으로 하여, 안나의 두 눈덩이 사이 내에서 엘사 두 눈덩이를 투포인터 방식으로 결정</u>해나간다. ((<code class="language-plaintext highlighter-rouge">left</code>, <code class="language-plaintext highlighter-rouge">right</code>를 사용) 그렇기 때문에 안나의 눈덩이는 최소 3 칸 이상 차이가 나야한다. 안나의 두 눈덩이를 고정시키는데 대략 N^2 만큼의 시간 복잡도 안에서 엘사의 두 눈덩이를 투포인터로 결정해나가기 때문에 첫번째 풀이보다는 실행 시간이 좀 더 걸릴 것이다. (엘사 안나 둘 중 누구를 투포인터를 적용할지는 중요하지 않다.)</p>

<p>조합을 구하듯 이중 반복문을 돌려 <code class="language-plaintext highlighter-rouge">i</code> 와 <code class="language-plaintext highlighter-rouge">j</code>를 고정하여 안나 눈사람을 정한다.(이 둘은 최소 3 이상 차이가 나야 한다.) 이 <code class="language-plaintext highlighter-rouge">i</code>와 <code class="language-plaintext highlighter-rouge">j</code> 사이의 범위에서 <code class="language-plaintext highlighter-rouge">left</code>, <code class="language-plaintext highlighter-rouge">right</code> 투포인터 알고리즘을 적용하여 엘사 눈사람을 정한다. <code class="language-plaintext highlighter-rouge">i</code>, <code class="language-plaintext highlighter-rouge">j</code>, <code class="language-plaintext highlighter-rouge">left</code>, <code class="language-plaintext highlighter-rouge">right</code> 모두 눈덩이를 가리키는 포인터가 된다.(인덱스)</p>

<p>✨ 투포인터 <code class="language-plaintext highlighter-rouge">left</code>, <code class="language-plaintext highlighter-rouge">right</code> 는 각각 양 끝에서 시작한다. 또한 눈덩이 배열을 오름차순 정렬을 미리 해놓는다.</p>

<ul>
  <li>투포인터 이동 기준 (즉, 고정된 안나의 두 눈덩이를 기준으로 엘사의 눈덩이를 어떻게 변경시켜나갈 것인가)
    <ul>
      <li>현재의 <code class="language-plaintext highlighter-rouge">i</code>, <code class="language-plaintext highlighter-rouge">j</code>, <code class="language-plaintext highlighter-rouge">left</code>, <code class="language-plaintext highlighter-rouge">right</code> 로 두 눈사람이 모두 결정되었다면 키 차이를 구한다.
        <ul>
          <li><code class="language-plaintext highlighter-rouge">(snow[left] + snow[right]) - (snow[i] + snow[j])</code></li>
        </ul>
      </li>
      <li>엘사 눈사람이 안나 눈사람보다 키가 크다면 (즉, 위 식의 결과가 양수)
        <ul>
          <li>최소 차이에 도달하기 위해선 앞으로 엘사의 키가 더 작아져야 한다. 따라서 <code class="language-plaintext highlighter-rouge">right</code> 왼쪽으로 한칸 이동! (정렬 되어있으니 가능)</li>
        </ul>
      </li>
      <li>엘사 눈사람이 안나 눈사람보다 키가 작다면 (즉, 위 식의 결과가 음수)
        <ul>
          <li>최소 차이에 도달하기 위해선 앞으로 엘사의 키가 더 커져야 한다. 따라서 <code class="language-plaintext highlighter-rouge">left</code> 오른쪽으로 한칸 이동! (정렬 되어있으니 가능)</li>
        </ul>
      </li>
      <li>“차이” 는 절대값이어야 하는 개념이기 때문.</li>
    </ul>
  </li>
</ul>

<p>무작정 4 개의 눈덩이를 뽑아보는게 아닌, 안나의 두 눈덩이만 뽑아둔 후 그 기준으로 엘사의 눈덩이는 투포인터로 O(N) 으로 결정하는 방식 ! 엘사의 모든 눈덩이 경우의 수를 다 구하지 않는다. 전체적으론 대략 N^3 의 시간 복잡도가 소요될 듯 하다.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;bits/stdc++.h&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="k">struct</span> <span class="nc">Elem</span> <span class="p">{</span> <span class="kt">int</span> <span class="n">index1</span><span class="p">,</span> <span class="n">index2</span><span class="p">,</span> <span class="n">sum</span><span class="p">;</span> <span class="p">};</span>
<span class="kt">bool</span> <span class="nf">cmp</span><span class="p">(</span><span class="k">const</span> <span class="n">Elem</span><span class="o">&amp;</span> <span class="n">a</span><span class="p">,</span> <span class="k">const</span> <span class="n">Elem</span><span class="o">&amp;</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
	<span class="k">return</span> <span class="n">a</span><span class="p">.</span><span class="n">sum</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">.</span><span class="n">sum</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="c1">//freopen("input.txt", "r", stdin);</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
	<span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span> <span class="n">cout</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>

	<span class="kt">int</span> <span class="n">N</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span><span class="p">;</span>

	<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">snow</span><span class="p">(</span><span class="n">N</span><span class="p">);</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
		<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">snow</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>

	<span class="n">sort</span><span class="p">(</span><span class="n">snow</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">snow</span><span class="p">.</span><span class="n">end</span><span class="p">());</span> <span class="c1">// 눈덩이 크기 순으로 정렬 </span>

	<span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">INT_MAX</span><span class="p">;</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span> <span class="o">-</span> <span class="mi">3</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">3</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span> <span class="p">{</span>
			<span class="c1">// i ~ j 범위의 양끝에서 시작</span>
			<span class="c1">// left 와 right 는 엘사의 눈덩이</span>
			<span class="kt">int</span> <span class="n">left</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
			<span class="kt">int</span> <span class="n">right</span> <span class="o">=</span> <span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>

			<span class="k">while</span> <span class="p">(</span><span class="n">left</span> <span class="o">&lt;</span> <span class="n">right</span><span class="p">)</span> <span class="p">{</span>
                <span class="kt">int</span> <span class="n">anna</span> <span class="o">=</span> <span class="n">snow</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">snow</span><span class="p">[</span><span class="n">j</span><span class="p">];</span> <span class="c1">// 안나 눈사람</span>
                <span class="kt">int</span> <span class="n">elsa</span> <span class="o">=</span> <span class="n">snow</span><span class="p">[</span><span class="n">left</span><span class="p">]</span> <span class="o">+</span> <span class="n">snow</span><span class="p">[</span><span class="n">right</span><span class="p">];</span> <span class="c1">// 엘사 눈사람</span>
				<span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="n">elsa</span> <span class="o">-</span> <span class="n">anna</span><span class="p">;</span>
				
				<span class="n">answer</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">answer</span><span class="p">,</span> <span class="n">abs</span><span class="p">(</span><span class="n">result</span><span class="p">));</span> 
				
				<span class="k">if</span> <span class="p">(</span><span class="n">result</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>  <span class="c1">// 현재 엘사가 더 크다면 최소 키 차이를 구하기 위해선 앞으로 엘사가 더 작아져야 한다.</span>
					<span class="n">right</span> <span class="o">=</span> <span class="n">right</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
				<span class="k">else</span>  <span class="c1">// 현재 엘사가 더 작다면 최소 키 차이를 구하기 위해선 앞으로 엘사가 더 커져야 한다.</span>
					<span class="n">left</span> <span class="o">=</span> <span class="n">left</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET