I"^<h1 id="-파일명-정렬">📌 파일명 정렬</h1>

<blockquote>
  <p>난이도 ⭐⭐</p>
</blockquote>

<h2 id="-문제">🚀 문제</h2>

<p><img src="https://user-images.githubusercontent.com/42318591/107309217-5f9e9380-6acd-11eb-8030-ae9a52178f3b.png" alt="image" /></p>

<p><img src="https://user-images.githubusercontent.com/42318591/107309240-688f6500-6acd-11eb-84f2-2fb37b22cf4a.png" alt="image" /></p>

<p><br /></p>

<h2 id="-내-풀이-">🚀 내 풀이 ⭕</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">bool</span> <span class="nf">cmp</span><span class="p">(</span><span class="k">const</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">a</span><span class="p">,</span> <span class="k">const</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
    
    <span class="cm">/* HEAD */</span>
    <span class="n">string</span> <span class="n">a_HEAD</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">a_index</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">a_index</span> <span class="o">&lt;</span> <span class="n">a</span><span class="p">.</span><span class="n">length</span><span class="p">())</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">a_index</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="sc">'0'</span> <span class="o">&amp;&amp;</span> <span class="n">a</span><span class="p">[</span><span class="n">a_index</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="sc">'9'</span><span class="p">)</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">else</span> <span class="p">{</span>
            <span class="n">a_HEAD</span> <span class="o">+=</span> <span class="n">tolower</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">a_index</span><span class="p">]);</span>
            <span class="n">a_index</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">string</span> <span class="n">b_HEAD</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">b_index</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">b_index</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">.</span><span class="n">length</span><span class="p">())</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="n">b_index</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="sc">'0'</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="p">[</span><span class="n">b_index</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="sc">'9'</span><span class="p">)</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">else</span> <span class="p">{</span>
            <span class="n">b_HEAD</span> <span class="o">+=</span> <span class="n">tolower</span><span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="n">b_index</span><span class="p">]);</span>
            <span class="n">b_index</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">a_HEAD</span> <span class="o">!=</span> <span class="n">b_HEAD</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">a_HEAD</span> <span class="o">&lt;</span> <span class="n">b_HEAD</span><span class="p">;</span>

    <span class="cm">/* NUMBER */</span>
    <span class="n">string</span> <span class="n">a_NUMBER</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">5</span> <span class="o">&amp;&amp;</span> <span class="n">a_index</span> <span class="o">&lt;</span> <span class="n">a</span><span class="p">.</span><span class="n">length</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">a_index</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="sc">'0'</span> <span class="o">&amp;&amp;</span> <span class="n">a</span><span class="p">[</span><span class="n">a_index</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="sc">'9'</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">a_NUMBER</span> <span class="o">+=</span> <span class="n">a</span><span class="p">[</span><span class="n">a_index</span><span class="p">];</span>
            <span class="n">a_index</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">string</span> <span class="n">b_NUMBER</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">5</span> <span class="o">&amp;&amp;</span> <span class="n">b_index</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">.</span><span class="n">length</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="n">b_index</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="sc">'0'</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="p">[</span><span class="n">b_index</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="sc">'9'</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">b_NUMBER</span> <span class="o">+=</span> <span class="n">b</span><span class="p">[</span><span class="n">b_index</span><span class="p">];</span>
            <span class="n">b_index</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="kt">int</span> <span class="n">a_num</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">a_NUMBER</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">b_num</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">b_NUMBER</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">a_num</span> <span class="o">!=</span> <span class="n">b_num</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">a_num</span> <span class="o">&lt;</span> <span class="n">b_num</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">files</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">files</span><span class="p">;</span>
    <span class="n">stable_sort</span><span class="p">(</span><span class="n">answer</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">answer</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">cmp</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<blockquote>
  <p><strong>stable_sort</strong> 👉 원래의 <u>입력 순서를 유지</u>하면서 정렬시킨다. (sort 처럼 <code class="language-plaintext highlighter-rouge">algorithm</code> 헤더에 있다.)</p>
</blockquote>

<ul>
  <li><code class="language-plaintext highlighter-rouge">sort</code> 👉 비교하는 <u>두 값이 같으면 랜덤하게 순서를 정한다.</u></li>
  <li><code class="language-plaintext highlighter-rouge">stable_sort</code> 👉 비교하는 <u>두 값이 같으면 입력 순서대로 정렬한다.</u></li>
</ul>

<p>우선 순위 3 순위의 정렬 기준은 입력 순서를 그대로 유지해야 하기 때문에 이 정렬은 <strong><em>stable_sort</em></strong> 함수를 사용해 정렬하는 것이 좋겠다.</p>

<ul>
  <li>정렬 기준
    <ol>
      <li><code class="language-plaintext highlighter-rouge">HEAD</code>의 사전 순 정렬 (대소문자 구분 X)</li>
      <li><code class="language-plaintext highlighter-rouge">HEAD</code>가 같다면 👉 <code class="language-plaintext highlighter-rouge">NUMBER</code>의 숫자 순 정렬 (5글자까지가 최대)</li>
      <li><code class="language-plaintext highlighter-rouge">HEAD</code>도, <code class="language-plaintext highlighter-rouge">NUMBER</code>도 같다면 👉 입력 순 정렬
        <ul>
          <li>✨stable_sort 함수를 사용해야 하는 이유! (일반 sort 함수를 쓴다면 <code class="language-plaintext highlighter-rouge">HEAD</code>와 <code class="language-plaintext highlighter-rouge">NUMBER</code>가 같은 것 끼리는 랜덤한 순서로 정렬될 것이다.)</li>
        </ul>
      </li>
    </ol>
  </li>
</ul>

<p><br /></p>

<h3 id="-비교-함수-만들기">✈ 비교 함수 만들기</h3>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">bool</span> <span class="n">cmp</span><span class="p">(</span><span class="k">const</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">a</span><span class="p">,</span> <span class="k">const</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">b</span><span class="p">)</span>
</code></pre></div></div>

<p>여담으로 비교함수의 기본 데이터 타입인 매개변수는 꼭 <code class="language-plaintext highlighter-rouge">const</code>를 붙여주어야 한다. <code class="language-plaintext highlighter-rouge">pair</code>, <code class="language-plaintext highlighter-rouge">vector</code> 같은 컨테이너 제외.</p>

<p><br /></p>

<h4 id="정렬-기준-1-순위--head-의-사전-순서">정렬 기준 1 순위 : HEAD 의 사전 순서</h4>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="cm">/* HEAD */</span>
    <span class="n">string</span> <span class="n">a_HEAD</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">a_index</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">a_index</span> <span class="o">&lt;</span> <span class="n">a</span><span class="p">.</span><span class="n">length</span><span class="p">())</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">a_index</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="sc">'0'</span> <span class="o">&amp;&amp;</span> <span class="n">a</span><span class="p">[</span><span class="n">a_index</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="sc">'9'</span><span class="p">)</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">else</span> <span class="p">{</span>
            <span class="n">a_HEAD</span> <span class="o">+=</span> <span class="n">tolower</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">a_index</span><span class="p">]);</span>
            <span class="n">a_index</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">string</span> <span class="n">b_HEAD</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">b_index</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">b_index</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">.</span><span class="n">length</span><span class="p">())</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="n">b_index</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="sc">'0'</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="p">[</span><span class="n">b_index</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="sc">'9'</span><span class="p">)</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">else</span> <span class="p">{</span>
            <span class="n">b_HEAD</span> <span class="o">+=</span> <span class="n">tolower</span><span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="n">b_index</span><span class="p">]);</span>
            <span class="n">b_index</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">a_HEAD</span> <span class="o">!=</span> <span class="n">b_HEAD</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">a_HEAD</span> <span class="o">&lt;</span> <span class="n">b_HEAD</span><span class="p">;</span>
</code></pre></div></div>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">HEAD</code> 부분은 문자로만 이루어진다. 그리고 대소문자를 구분하지 않는다.</p>
</blockquote>

<ul>
  <li>두 <code class="language-plaintext highlighter-rouge">HEAD</code>가 같지 않다면 이 문자열 <code class="language-plaintext highlighter-rouge">HEAD</code>의 사전 순대로 오름차순 정렬하고 비교함수를 빠져나오면 된다.</li>
  <li>여기까지 완료하면 <code class="language-plaintext highlighter-rouge">a_index</code>, <code class="language-plaintext highlighter-rouge">b_index</code>에는 각각 두 비교 대상 문자열의 숫자가 시작되는 <code class="language-plaintext highlighter-rouge">NUMBER</code> 부분의 시작 인덱스가 담기게 된다.</li>
</ul>

<p><br /></p>

<h4 id="정렬-기준-2-순위--number-의-숫자-크기">정렬 기준 2 순위 : NUMBER 의 숫자 크기</h4>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="cm">/* NUMBER */</span>
    <span class="n">string</span> <span class="n">a_NUMBER</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">5</span> <span class="o">&amp;&amp;</span> <span class="n">a_index</span> <span class="o">&lt;</span> <span class="n">a</span><span class="p">.</span><span class="n">length</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">a_index</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="sc">'0'</span> <span class="o">&amp;&amp;</span> <span class="n">a</span><span class="p">[</span><span class="n">a_index</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="sc">'9'</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">a_NUMBER</span> <span class="o">+=</span> <span class="n">a</span><span class="p">[</span><span class="n">a_index</span><span class="p">];</span>
            <span class="n">a_index</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">string</span> <span class="n">b_NUMBER</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">5</span> <span class="o">&amp;&amp;</span> <span class="n">b_index</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">.</span><span class="n">length</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="n">b_index</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="sc">'0'</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="p">[</span><span class="n">b_index</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="sc">'9'</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">b_NUMBER</span> <span class="o">+=</span> <span class="n">b</span><span class="p">[</span><span class="n">b_index</span><span class="p">];</span>
            <span class="n">b_index</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="kt">int</span> <span class="n">a_num</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">a_NUMBER</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">b_num</span> <span class="o">=</span> <span class="n">stoi</span><span class="p">(</span><span class="n">b_NUMBER</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">a_num</span> <span class="o">!=</span> <span class="n">b_num</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">a_num</span> <span class="o">&lt;</span> <span class="n">b_num</span><span class="p">;</span>
</code></pre></div></div>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">NUMBER</code> 부분은 숫자로만 이루어진다. 최대 5글자까지 나올 수 있으며, <code class="language-plaintext highlighter-rouge">0012</code>은 곧 <code class="language-plaintext highlighter-rouge">12</code> 와 같다. (정수 변환이 필요하단 얘기)</p>
</blockquote>

<ul>
  <li>위 정렬 기준 1 순위에서 리턴되지 않았다면 두 <code class="language-plaintext highlighter-rouge">HEAD</code>가 같다는 얘기다. 이럴 경우에는 이제 <code class="language-plaintext highlighter-rouge">NUMBER</code>끼리 비교를 해야 한다.</li>
  <li><code class="language-plaintext highlighter-rouge">NUMBER</code> 문자열을 결정할 때 반복 조건
    <ol>
      <li>최대 5 개만 저장할 수 있음</li>
      <li><code class="language-plaintext highlighter-rouge">TAIL</code>은 없을 수도 있기 때문에 <code class="language-plaintext highlighter-rouge">NUMBER</code>이 5글자도 안되어 문자열이 끊길 수 있으므로 런타임 에러를 대비해 인덱스가 문자열 길이보다 작은지도 검사해주어야 함.</li>
      <li>숫자 일 때만 반복</li>
    </ol>
  </li>
  <li>두 숫자가 같지 않다면 숫자 크기 순대로 오름차순 정렬하고 비교함수를 빠져나오면 된다.</li>
</ul>

<p><br /></p>

<h4 id="정렬-기준-3-순위--입력-순서">정렬 기준 3 순위 : 입력 순서</h4>

<p>1순위, 2순위에서 리턴되지 않았다면 <code class="language-plaintext highlighter-rouge">HEAD</code>도 <code class="language-plaintext highlighter-rouge">NUMBER</code>도 같다는 것이다. <em>stable_sort</em> 로 정렬했기 때문에 <u>이 경우엔 자동으로 입력 순서로 정렬이 된다.</u></p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">files</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">files</span><span class="p">;</span>
    <span class="n">stable_sort</span><span class="p">(</span><span class="n">answer</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">answer</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">cmp</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>이렇게 완성한 비교함수로 stable_sort 시켜주면 된다.</p>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET