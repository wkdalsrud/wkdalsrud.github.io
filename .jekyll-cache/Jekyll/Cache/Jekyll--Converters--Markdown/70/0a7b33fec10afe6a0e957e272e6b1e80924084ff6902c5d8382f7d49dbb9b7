I"m%<h1 id="-올바른-괄호의-갯수">📌 올바른 괄호의 갯수</h1>

<blockquote>
  <p>난이도 ⭐⭐⭐⭐</p>
</blockquote>

<h2 id="-문제">🚀 문제</h2>

<p><img src="https://user-images.githubusercontent.com/42318591/115959994-ff56b400-a549-11eb-8c94-1c851075a90f.png" alt="image" /></p>

<p><br /></p>

<h2 id="-내-풀이">🚀 내 풀이</h2>

<h3 id="-첫-번째-풀이--dfs">🔥 첫 번째 풀이 ⭕ (DFS)</h3>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="n">Answer</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">DFS</span><span class="p">(</span><span class="kt">int</span> <span class="n">open</span><span class="p">,</span> <span class="kt">int</span> <span class="n">close</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// open : 현재까지 열린 괄호의 개수, close : 현재까지 닫힌 괄호의 개수</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">open</span> <span class="o">&gt;</span> <span class="n">N</span> <span class="o">||</span> <span class="n">close</span> <span class="o">&gt;</span> <span class="n">N</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">open</span> <span class="o">&lt;</span> <span class="n">close</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="n">open</span> <span class="o">==</span> <span class="n">N</span> <span class="o">&amp;&amp;</span> <span class="n">close</span> <span class="o">==</span> <span class="n">N</span><span class="p">){</span>
        <span class="n">Answer</span><span class="o">++</span><span class="p">;</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="n">DFS</span><span class="p">(</span><span class="n">open</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">close</span><span class="p">);</span> <span class="c1">// 열린 괄호 추가시  </span>
    <span class="n">DFS</span><span class="p">(</span><span class="n">open</span><span class="p">,</span> <span class="n">close</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">// 닫힌 괄호 추가시</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">N</span> <span class="o">=</span> <span class="n">n</span><span class="p">;</span>
    <span class="n">DFS</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">Answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>올바르지 못 한 괄호
    <ul>
      <li>열린 괄호의 개수보다 닫힌 괄호의 개수가 더 많아질 때 *ex) (()))</li>
      <li>열린 괄호 혹은 닫힌 괄호의 개수가 <code class="language-plaintext highlighter-rouge">N</code> 개를 넘어설 때 (N 쌍이어야 하니까)</li>
    </ul>
  </li>
  <li>
    <p>한번도 올바르지 못 했던적 없이 열린 괄호와 닫힌 괄호 둘 다 <code class="language-plaintext highlighter-rouge">N</code> 개가 되었을 때 <strong>올바른 상태인 괄호이므로 카운팅!</strong></p>
  </li>
  <li>ex) 현재 DFS(3, 1) 상태라면 <code class="language-plaintext highlighter-rouge">((()</code> 상태인 것이나 마찬가지이다. (굳이 문자열 append 안해도 개수만 따지므로 int 만 취급해도 괜찮다.)
    <ul>
      <li>DFS(3 + 1, 1) 👉 <code class="language-plaintext highlighter-rouge">(((( )</code></li>
      <li>DFS(3, 1 + 1) 👉 <code class="language-plaintext highlighter-rouge">((( ))</code></li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h3 id="-두-번째-풀이--next_permutation">🔥 두 번째 풀이 ⭕ (next_permutation)</h3>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
	<span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="n">vector</span> <span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">s</span><span class="p">;</span>  <span class="c1">// 예를들어 n = 3 라면 {-1, -1, -1, 1, 1, 1} 모양으로 시작 </span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">s</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>  <span class="c1">// 닫힌 괄호</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">s</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>   <span class="c1">// 열린 괄호</span>

	<span class="k">do</span> <span class="p">{</span>
		<span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
		<span class="n">answer</span><span class="o">++</span><span class="p">;</span>
        <span class="c1">// 아래 과정(for문)에 한번도 걸리지 못 했다면 올바른 괄호 </span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 열린 닫힌 괄호 총 합쳐서 2n 개가 되어야 함 </span>
			<span class="n">sum</span> <span class="o">+=</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">sum</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// sum &lt; 0 이 되었다는 것은 닫힌 괄호의 개수가 더 많아진 올바르지 못한 상태</span>
				<span class="n">answer</span><span class="o">--</span><span class="p">;</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span> <span class="k">while</span> <span class="p">(</span><span class="n">next_permutation</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">s</span><span class="p">.</span><span class="n">end</span><span class="p">()));</span> <span class="c1">// 초기 모습 {-1, -1, -1, 1, 1, 1} 를 순열 돌림 </span>
	<span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<blockquote>
  <p>코드 참고 <a href="https://greenapple16.tistory.com/51">https://greenapple16.tistory.com/51</a></p>
</blockquote>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET