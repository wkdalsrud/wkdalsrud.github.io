I"x-<h1 id="힙-이중-우선순위-큐">[힙] 이중 우선순위 큐</h1>

<blockquote>
  <p>난이도 ⭐⭐⭐</p>
</blockquote>

<h2 id="문제">문제</h2>

<p><img src="https://user-images.githubusercontent.com/42318591/89862927-e5f02080-dbe3-11ea-8a36-35d7c215a593.png" alt="image" width="80%" height="80%" class="align-center" /></p>

<p><br /></p>

<h2 id="내-풀이-">내 풀이 ⭕</h2>

<blockquote>
  <p>별 3 개 짜리 문제들 중에선 처음으로 수월하게 빨리 풀었던 문제인 것 같다.. 어리 둥절 🤔</p>
</blockquote>

<ul>
  <li>우선 순위 큐 2 개를 두었다.
    <ul>
      <li>최대값을 우선으로 pop 하는 <code class="language-plaintext highlighter-rouge">maxHeap</code> 우선순위 큐
        <ul>
          <li>최대값 삭제하는 연산 때 이 우선순위 큐에서 pop 연산</li>
        </ul>
      </li>
      <li>최소값을 우선으로 pop 하는 <code class="language-plaintext highlighter-rouge">minHaep</code> 우선순위 큐
        <ul>
          <li>최소값 삭제하는 연산 때 이 우선순위 큐에서 pop 연산</li>
        </ul>
      </li>
      <li><u>삽입 연산때는 우선 순위 큐 2 개에 다 삽입</u></li>
    </ul>
  </li>
  <li>우선 3가지의 연산자 중 어떤 연산인지 체크하기 전에
    <ul>
      <li>✨<strong><em>maxHeap.top() &lt; minHeap.top()</em></strong> 이라면 큐가 비어있다고 판단하고 두 우선순위 큐를 싹 비운다.
        <ul>
          <li>최대값 보다 최소값이 더 크다는 모순이 생기는 것이니까!</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>operations 벡터를 한바퀴 전부 순회하고 나면 최종적으로
    <ul>
      <li>두 우선순위 큐 중 하나라도 비어있다면 큐는 비어있다고 판단한다.</li>
      <li>두 우선순위 큐 둘다 비어있지 않다면 각각의 <code class="language-plaintext highlighter-rouge">top</code>을 <code class="language-plaintext highlighter-rouge">pop</code> 하여 answer 에 최대값, 최소값으로 삽입해주면 된다.</li>
    </ul>
  </li>
</ul>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="k">struct</span> <span class="nc">cmp</span>
<span class="p">{</span>
    <span class="kt">bool</span> <span class="k">operator</span><span class="p">()</span> <span class="p">(</span><span class="k">const</span> <span class="kt">int</span> <span class="o">&amp;</span> <span class="n">a</span><span class="p">,</span> <span class="k">const</span> <span class="kt">int</span> <span class="o">&amp;</span> <span class="n">b</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="n">b</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">operations</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>
    
    <span class="n">priority_queue</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">maxHeap</span><span class="p">;</span>
    <span class="n">priority_queue</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">,</span> <span class="n">cmp</span><span class="o">&gt;</span> <span class="n">minHeap</span><span class="p">;</span>
    
    <span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="o">&amp;</span> <span class="n">oper</span> <span class="o">:</span> <span class="n">operations</span><span class="p">)</span>
    <span class="p">{</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">maxHeap</span><span class="p">.</span><span class="n">empty</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">minHeap</span><span class="p">.</span><span class="n">empty</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="n">maxHeap</span><span class="p">.</span><span class="n">top</span><span class="p">()</span> <span class="o">&lt;</span> <span class="n">minHeap</span><span class="p">.</span><span class="n">top</span><span class="p">())</span> <span class="c1">// 큐가 비어있다고 판단하고 두 우선순위 큐를 싹 비운다.</span>
        <span class="p">{</span>
            <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">maxHeap</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
                <span class="n">maxHeap</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
            <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">minHeap</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
                <span class="n">minHeap</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
        <span class="p">}</span> 
        
        <span class="k">if</span> <span class="p">(</span><span class="n">oper</span> <span class="o">==</span> <span class="s">"D 1"</span><span class="p">)</span>  <span class="c1">// 최대값 삭제</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">maxHeap</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
                <span class="n">maxHeap</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span> 
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">oper</span> <span class="o">==</span> <span class="s">"D -1"</span><span class="p">)</span> <span class="c1">// 최소값 삭제</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">minHeap</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
                <span class="n">minHeap</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="c1">// 삽입</span>
        <span class="p">{</span>
            <span class="n">maxHeap</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">stoi</span><span class="p">(</span><span class="n">oper</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">)));</span>
            <span class="n">minHeap</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">stoi</span><span class="p">(</span><span class="n">oper</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">)));</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="cm">/* 최종 */</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">maxHeap</span><span class="p">.</span><span class="n">empty</span><span class="p">()</span> <span class="o">||</span> <span class="n">minHeap</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>  <span class="c1">// 비어있는 큐</span>
    <span class="p">{</span>
        <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
        <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">else</span>  <span class="c1">// 비어있지 않은 큐</span>
    <span class="p">{</span>
        <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">maxHeap</span><span class="p">.</span><span class="n">top</span><span class="p">());</span>
        <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">minHeap</span><span class="p">.</span><span class="n">top</span><span class="p">());</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="다른-풀이">다른 풀이</h2>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">multiset</code> 자료구조를 사용하는 방법도 있다.</p>
</blockquote>

<ul>
  <li>프로그래머스에서 <code class="language-plaintext highlighter-rouge">multiset</code>을 사용한 다른 분의 풀이를 봤는데 내가 푼 풀이보다 훨씬 간단하다고 느꼈다.</li>
  <li><code class="language-plaintext highlighter-rouge">multiset</code>은 <u>정렬되어 있고</u> <u>중복 값이 가능하니까</u>
    <ul>
      <li>값은 <code class="language-plaintext highlighter-rouge">multiset</code>에 삽입하고</li>
      <li>최대값 삭제는 👉 <code class="language-plaintext highlighter-rouge">end()</code> 반복자에 바로 앞에 위치한 값을, 즉 최대값을 <code class="language-plaintext highlighter-rouge">erase</code> 해주면 된다.</li>
      <li>최소값 삭제는 👉 <code class="language-plaintext highlighter-rouge">begin()</code> 반복자, 가장 앞에 위치한 값을, 즉 최소값을 <code class="language-plaintext highlighter-rouge">erase</code> 해주면 된다.</li>
      <li>나중에 최종적으로 <code class="language-plaintext highlighter-rouge">multiset</code>이 비어있다면 빈 큐이고 아니라면 <code class="language-plaintext highlighter-rouge">--end()</code>, <code class="language-plaintext highlighter-rouge">begin()</code> 반복자에 위치한 값을 answer에 삽입해주면 된다.</li>
    </ul>
  </li>
</ul>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET